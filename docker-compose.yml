version: '3.8'

networks:
  laravel:

services:
  app:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - WEBROOT=${WEBROOT}
    ports:
      - ${NGINXPORTS}
    volumes:
      - ./src:${WEBROOT}:delegated
    depends_on:
      - php
      - redis
      - mysql
      - scheduler
      - supervisor
    networks:
      - laravel

  mysql:
    image: mysql:latest
    restart: unless-stopped
    tty: true
    ports:
      - ${MYSQLPORTS}
    environment:
      MYSQL_DATABASE: homestead
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - WEBROOT=${WEBROOT}
    ports:
      - ${PHPFPMPORTS}
    volumes:
      - ./src:${WEBROOT}:delegated
    networks:
      - laravel

  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - ${REDISPORTS}
    networks:
      - laravel

  composer:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - WEBROOT=${WEBROOT}
    volumes:
      - ./src:${WEBROOT}
    depends_on:
      - php
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]
    networks:
      - laravel

  npm:
    image: node:current-alpine
    volumes:
      - ./src:${WEBROOT}
    ports:
      - ${VITEPORTS}
      - "3000:3000"
      - "3001:3001"
    working_dir: ${WEBROOT}
    entrypoint: [ 'npm' ]
    networks:
      - laravel

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - WEBROOT=${WEBROOT}
    volumes:
      - ./src:${WEBROOT}:delegated
    depends_on:
      - mysql
    entrypoint: [ 'php', '${WEBROOT}/artisan' ]
    networks:
      - laravel

  scheduler:
    build:
      context: .
      dockerfile: dockerfiles/cron.dockerfile
    volumes:
      - ./src:${WEBROOT}
    networks:
      - laravel

  supervisor:
    build:
      context: .
      dockerfile: dockerfiles/supervisor.dockerfile
    container_name: supervisor
    volumes:
      - ./src:${WEBROOT}
    networks:
      - laravel